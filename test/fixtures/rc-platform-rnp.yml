---
swagger: '2.0'
info:
  title: RingCentral Roles and Permissions API
  description: Permissions Checking and Role Management API
  version: 1.0.34
  contact:
    name: RingCentral Connect Platform
    url: http://developers.ringcentral.com
    email: platform@ringcentral.com
  license:
    name: RingCentral API License Agreement and Terms of Use
    url: https://www.ringcentral.com/legal/apilitos.html
host: platform.ringcentral.com
schemes:
- https
basePath: "/restapi"
produces:
- application/json
tags:
- name: "Authorization Profile"
- name: "Assigned Roles"
- name: "Predefined Roles"
- name: "Custom Roles"
- name: "Permissions"
- name: "Multisite Accounts"
x-auth-required: true
x-service-version: "v1"
x-service-interface: "rest"
x-service-name: "pas"
x-internal-api: false
x-blacklisting-strategy: "Off"
x-metered-api: true
x-metering-group: "System"
paths:

  /v1.0/account/{accountId}/extension/{extensionId}/authz-profile:
    get:
      tags:
      - "Authorization Profile"
      operationId: "getProfile"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "extensionId"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/AuthProfileEndpoint"
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/ExtensionEndpoint"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/AuthProfileResource"
          headers: {}
      x-api-group: "extension/authz-profile"
      x-throttling-group: "Medium"
      x-metered-api: true
      x-metering-group: "System"
  /v1.0/account/{accountId}/extension/{extensionId}/authz-profile/check:
    get:
      tags:
      - "Authorization Profile"
      operationId: "checkPermission"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "permissionId"
        in: "query"
        required: false
        type: "string"
      - name: "targetExtensionId"
        in: "query"
        required: false
        type: "string"
      - name: "extensionId"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/AuthProfileEndpoint"
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/ExtensionEndpoint"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/AuthProfileCheckResource"
          headers: {}
      x-api-group: "extension/authz-profile/check"
      x-throttling-group: "Light"
      x-metered-api: true
      x-metering-group: "System"

  /v1.0/account/{accountId}/assigned-role:
    get:
      tags:
      - Assigned Roles
      operationId: "listExtensionsWithRoles"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "showHidden"
        in: "query"
        required: false
        type: "boolean"
      - name: "accountId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/AccountRolesEndpoint"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ExtensionWithRolesCollectionResource"
          headers: {}
      x-api-group: "account/assigned-role"
      x-throttling-group: "Medium"
      x-metered-api: true
      x-metering-group: "System"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadAssignedRoles"
  /v1.0/account/{accountId}/extension/{extensionId}/assigned-role:
    get:
      tags:
      - Assigned Roles
      operationId: "listAssignedRoles"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "showHidden"
        in: "query"
        required: false
        type: "boolean"
      - name: "extensionId"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/AssignedRoleEndpoint"
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/ExtensionEndpoint"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/AssignedRolesResource"
          headers: {}
      x-api-group: "extension/assigned-role"
      x-throttling-group: "Light"
      x-metered-api: true
      x-metering-group: "System"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadExtensions"
    put:
      tags:
      - Assigned Roles
      operationId: "modifyAssignedRoles"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/AssignedRolesResource"
      - name: "extensionId"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/AssignedRoleEndpoint"
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/ExtensionEndpoint"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/AssignedRolesResource"
          headers: {}
      x-api-group: "extension/assigned-role"
      x-throttling-group: "Medium"
      x-metered-api: true
      x-metering-group: "System"
      x-app-permission: "RoleManagement"
  /v1.0/account/{accountId}/user-role/{roleId}/bulk-assign:
    post:
      tags:
      - Assigned Roles
      operationId: "bulkAssign"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "roleId"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/BulkRoleAssignResource"
      - name: "accountId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/CustomRoleEndpoint"
      responses:
        default:
          description: "successful operation"
      x-api-group: "account/user-role"
      x-throttling-group: "Heavy"
      x-metered-api: true
      x-metering-group: "System"
      x-app-permission: "RoleManagement"
      x-user-permission: "EditUserRoles"
  /v1.0/account/{accountId}/user-role/default:
    get:
      tags:
      - Assigned Roles
      summary: Get Default User Role
      operationId: loadUserRole
      description: "<p style='font-style:italic;'>Since 1.0.28 (Release 8.4)</p><p>Returns
        account default user role.</p><h4>Required Permissions</h4><table class='fullwidth'><thead><tr><th>Permission</th><th>Description</th></tr></thead><tbody><tr><td
        class='code'>RoleManagement</td><td>Editing and assignment of user roles</td></tr></tbody></table><h4>API
        Group</h4><p>Light</p>"
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: accountId
        type: string
        in: path
        description: Internal identifier of an account
        required: true
        default: "~"
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/"
      x-api-group: "account/user-role/default"
      x-throttling-group: "Light"
      x-metered-api: true
      x-metering-group: "System"
      x-app-permission: "RoleManagement"
      x-user-permission: "Roles"
    put:
      tags:
      - Assigned Roles
      summary: Set Default User Role
      operationId: updateUserRole
      description: "<p style='font-style:italic;'>Since 1.0.30 (Release 9.1)</p><p>Updates
        account default user role.</p><h4>Required Permissions</h4><table class='fullwidth'><thead><tr><th>Permission</th><th>Description</th></tr></thead><tbody><tr><td
        class='code'>RoleManagement</td><td>Editing and assignment of user roles</td></tr></tbody></table><h4>API
        Group</h4><p>Light</p>"
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: accountId
        type: string
        in: path
        description: Internal identifier of an account
        required: true
        default: "~"
      - name: body
        in: body
        description: JSON body
        schema:
          "$ref": "#/definitions/DefaultUserRoleRequest"
        required: true
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/DefaultUserRole"
      x-api-group: "account/user-role/default"
      x-throttling-group: "Medium"
      x-metered-api: true
      x-metering-group: "System"
      x-app-permission: "RoleManagement"
      x-user-permission: "Roles"

  /v1.0/dictionary/user-role:
    get:
      tags:
      - Predefined Roles
      operationId: "listSystemRoles"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        required: false
        type: "string"
        default: "1"
      - name: "perPage"
        in: "query"
        required: false
        type: "string"
        default: "100"
      - name: "servicePlanId"
        in: "query"
        required: false
        type: "string"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/SystemRoleEndpoint"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/RolesCollectionResource"
          headers: {}
      x-api-group: "dictionary/user-role"
      x-throttling-group: "Light"
      x-metered-api: true
      x-metering-group: "System"
  /v1.0/dictionary/user-role/{roleId}:
    get:
      tags:
      - Predefined Roles
      operationId: "getSystemRole"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "roleId"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/SystemRoleEndpoint"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/RoleResource"
          headers: {}
      x-api-group: "dictionary/user-role"
      x-throttling-group: "Light"
      x-metered-api: true
      x-metering-group: "System"

  /v1.0/account/{accountId}/user-role:
    get:
      tags:
      - Custom Roles
      operationId: "listRoles"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "custom"
        in: "query"
        required: false
        type: "boolean"
      - name: "page"
        in: "query"
        required: false
        type: "string"
        default: "1"
      - name: "perPage"
        in: "query"
        required: false
        type: "string"
        default: "100"
      - name: "accountId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/CustomRoleEndpoint"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/RolesCollectionResource"
          headers: {}
      x-api-group: "account/user-role"
      x-throttling-group: "Medium"
      x-metered-api: true
      x-metering-group: "System"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadUserRoles"
    post:
      tags:
      - Custom Roles
      operationId: "createRole"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/RoleResource"
      - name: "accountId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/CustomRoleEndpoint"
      responses:
        default:
          description: "successful operation"
      x-api-group: "account/user-role"
      x-throttling-group: "Medium"
      x-metered-api: true
      x-metering-group: "System"
      x-app-permission: "RoleManagement"
      x-user-permission: "EditUserRoles"
  /v1.0/account/{accountId}/user-role/{roleId}:
    get:
      tags:
      - Custom Roles
      operationId: "getRole"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "roleId"
        in: "path"
        required: true
        type: "string"
      - name: "accountId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/CustomRoleEndpoint"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/RoleResource"
          headers: {}
      x-api-group: "account/user-role"
      x-throttling-group: "Light"
      x-metered-api: true
      x-metering-group: "System"
      x-user-permission: "ReadUserRoles"
      x-app-permission: "ReadAccounts"
    put:
      tags:
      - Custom Roles
      operationId: "updateRole"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "roleId"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/RoleResource"
      - name: "accountId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/CustomRoleEndpoint"
      responses:
        default:
          description: "successful operation"
      x-api-group: "account/user-role"
      x-throttling-group: "Medium"
      x-metered-api: true
      x-metering-group: "System"
      x-user-permission: "EditUserRoles"
      x-app-permission: "RoleManagement"
    delete:
      tags:
      - Custom Roles
      operationId: "deleteRole"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "roleId"
        in: "path"
        required: true
        type: "string"
      - name: "accountId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/CustomRoleEndpoint"
      responses:
        default:
          description: "successful operation"
      x-api-group: "account/user-role"
      x-throttling-group: "Medium"
      x-metered-api: true
      x-metering-group: "System"
      x-app-permission: "RoleManagement"
      x-user-permission: "EditUserRoles"
      
  /v1.0/dictionary/permission:
    get:
      tags:
      - Permissions  
      operationId: "listPermissions"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        required: false
        type: "string"
        default: "1"
      - name: "perPage"
        in: "query"
        required: false
        type: "string"
        default: "100"
      - name: "assignable"
        in: "query"
        required: false
        type: "boolean"
      - name: "servicePlanId"
        in: "query"
        required: false
        type: "string"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PermissionEndpoint"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PermissionCollectionResource"
          headers: {}
      x-api-group: "dictionary/permission"
      x-throttling-group: "Light"
      x-metered-api: true
      x-metering-group: "System"
  /v1.0/dictionary/permission-category:
    get:
      tags:
      - Permissions
      operationId: "listPermissionCategories"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        required: false
        type: "string"
        default: "1"
      - name: "perPage"
        in: "query"
        required: false
        type: "string"
        default: "100"
      - name: "servicePlanId"
        in: "query"
        required: false
        type: "string"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PermissionCategoryEndpoint"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PermissionCategoryCollectionResource"
          headers: {}
      x-api-group: "dictionary/permission-category"
      x-throttling-group: "Light"
      x-metered-api: true
      x-metering-group: "System"
  /v1.0/dictionary/permission-category/{permissionCategoryId}:
    get:
      tags:
      - Permissions
      operationId: "getPermissionCategory"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "permissionCategoryId"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PermissionCategoryEndpoint"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PermissionCategoryResource"
          headers: {}
      x-api-group: "dictionary/permission-category"
      x-throttling-group: "Light"
      x-metered-api: true
      x-metering-group: "System"
  /v1.0/dictionary/permission/{permissionId}:
    get:
      tags:
      - Permissions
      operationId: "getPermission"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "permissionId"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/PermissionEndpoint"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PermissionResource"
          headers: {}
      x-api-group: "dictionary/permission"
      x-throttling-group: "Light"
      x-metered-api: true
      x-metering-group: "System"

  /v1.0/account/{accountId}/extension/{extensionId}/administered-sites:
    put:
      tags:
      - Multisite Accounts
      consumes:
      - "application/json"
      - "multipart/mixed"
      produces:
      - "application/json"
      - "multipart/mixed"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
      - name: "extensionId"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
      x-api-group: "extension/administered-sites"
      x-throttling-group: "Medium"
      x-metered-api: true
      x-metering-group: "System"
      x-app-permission: "EditAccounts"
      x-user-permission: "EditAssignedRoles"
    get:
      tags:
      - Multisite Accounts
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
      - name: "extensionId"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "Success"
      x-api-group: "extension/administered-sites"
      x-throttling-group: "Medium"
      x-metered-api: true
      x-metering-group: "System"
      x-app-permission: "ReadAccounts"
      x-user-permission: "ReadExtensions"      
      
definitions:
  AuthProfileEndpoint:
    type: "object"
    properties:
      multiPartHandler:
        $ref: "#/definitions/MultiPartHandler"
      profile:
        $ref: "#/definitions/AuthProfileResource"
      subscriberInfo:
        $ref: "#/definitions/SubscriptionInfo"
        
  AuthProfileResource:
    type: "object"
    properties:
      uri:
        type: "string"
        format: "uri"
        xml:
          attribute: true
      permissions:
        type: "array"
        items:
          $ref: "#/definitions/ActivePermissionResource"
    xml:
      name: "versionedResource"
      
  AuthProfileCheckResource:
    type: "object"
    properties:
      uri:
        type: "string"
        format: "uri"
        xml:
          attribute: true
      successful:
        type: "boolean"
        default: false
      details:
        $ref: "#/definitions/ActivePermissionResource"
    xml:
      name: "versionedResource"
      
  CustomRoleEndpoint:
    type: "object"
    properties:
      multiPartHandler:
        $ref: "#/definitions/MultiPartHandler"
      subscriberInfo:
        $ref: "#/definitions/SubscriptionInfo"

  PermissionCategoryEndpoint:
    type: "object"
    properties:
      multiPartHandler:
        $ref: "#/definitions/MultiPartHandler"
      subscriberInfo:
        $ref: "#/definitions/SubscriptionInfo"

  ExtensionWithRolesCollectionResource:
    type: "object"
    properties:
      uri:
        type: "string"
        format: "uri"
        xml:
          attribute: true
      records:
        type: "array"
        xml:
          name: "records"
          wrapped: true
        items:
          $ref: "#/definitions/ExtensionWithRolesResource"
    xml:
      name: "collectionResource"
      
  RolesCollectionResource:
    type: "object"
    properties:
      uri:
        type: "string"
        format: "uri"
        xml:
          attribute: true
      records:
        type: "array"
        xml:
          name: "records"
          wrapped: true
        items:
          $ref: "#/definitions/RoleResource"
      paging:
        $ref: "#/definitions/Paging"
      navigation:
        $ref: "#/definitions/Navigation"
    xml:
      name: "collectionResource"
      
  ExtensionWithRolesResource:
    type: "object"
    properties:
      uri:
        type: "string"
        format: "uri"
        xml:
          attribute: true
      extensionId:
        type: "string"
      roles:
        type: "array"
        items:
          $ref: "#/definitions/AssignedRoleResource"
    xml:
      name: "versionedResource"     
      
  AssignedRolesResource:
    type: "object"
    properties:
      uri:
        type: "string"
        format: "uri"
        xml:
          attribute: true
      records:
        type: "array"
        items:
          $ref: "#/definitions/AssignedRoleResource"
    xml:
      name: "versionedResource"
 
  SystemRoleEndpoint:
    type: "object"
    properties:
      multiPartHandler:
        $ref: "#/definitions/MultiPartHandler"
      subscriberInfo:
        $ref: "#/definitions/SubscriptionInfo"
        
  AssignedRoleResource:
    type: "object"
    properties:
      uri:
        type: "string"
        format: "uri"
        xml:
          attribute: true
      id:
        type: "string"
      autoAssigned:
        type: "boolean"
        default: false
      displayName:
        type: "string"
    xml:
      name: "versionedResource"
      
  RoleResource:
    type: "object"
    properties:
      uri:
        type: "string"
        format: "uri"
        xml:
          attribute: true
      id:
        type: "string"
      displayName:
        type: "string"
        minLength: 0
        maxLength: 128
        pattern: "^((?!(<|>|\\/|\\\")).)*$"
      description:
        type: "string"
        minLength: 0
        maxLength: 2000
        pattern: "^((?!(<|>|\\/|\\\")).)*$"
      custom:
        type: "boolean"
        default: false
      scope:
        type: "string"
      hidden:
        type: "boolean"
        default: false
      lastUpdated:
        type: "string"
        format: "date-time"
      permissions:
        type: "array"
        items:
          $ref: "#/definitions/PermissionIdResource"
    xml:
      name: "versionedResource"     
      
  BulkRoleAssignResource:
    type: "object"
    properties:
      uri:
        type: "string"
        format: "uri"
        xml:
          attribute: true
      addedExtensionIds:
        type: "array"
        items:
          type: "string"
      removedExtensionIds:
        type: "array"
        items:
          type: "string"
    xml:
      name: "versionedResource" 
      
  PermissionEndpoint:
    type: "object"
    properties:
      multiPartHandler:
        $ref: "#/definitions/MultiPartHandler"
      subscriberInfo:
        $ref: "#/definitions/SubscriptionInfo"
        
  AccountRolesEndpoint:
    type: "object"
    properties:
      multiPartHandler:
        $ref: "#/definitions/MultiPartHandler"
      subscriberInfo:
        $ref: "#/definitions/SubscriptionInfo"
        
  AssignedRoleEndpoint:
    type: "object"
    properties:
      multiPartHandler:
        $ref: "#/definitions/MultiPartHandler"
      subscriberInfo:
        $ref: "#/definitions/SubscriptionInfo"
        
  ActivePermissionResource:
    type: "object"
    properties:
      permission:
        $ref: "#/definitions/PermissionIdResource"
      effectiveRole:
        $ref: "#/definitions/RoleIdResource"
      scopes:
        type: "array"
        items:
          type: "string"       
          
  ApplicationInfoResource:
    type: "object"
    properties:
      clientId:
        type: "string"
      application:
        $ref: "#/definitions/ApplicationResource" 
        
  PermissionCollectionResource:
    type: "object"
    properties:
      uri:
        type: "string"
        format: "uri"
        xml:
          attribute: true
      records:
        type: "array"
        xml:
          name: "records"
          wrapped: true
        items:
          $ref: "#/definitions/PermissionResource"
      paging:
        $ref: "#/definitions/Paging"
      navigation:
        $ref: "#/definitions/Navigation"
    xml:
      name: "collectionResource"


  SessionResource:
    type: "object"
    properties:
      uri:
        type: "string"
        format: "uri"
        xml:
          attribute: true
      id:
        type: "string"
      accountId:
        type: "string"
      extensionId:
        type: "string"
      creationTime:
        type: "string"
        format: "date-time"
      clientId:
        type: "string"
      application:
        $ref: "#/definitions/ApplicationResource"
    xml:
      name: "versionedResource"


  ApplicationResource:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      description:
        type: "string"
      organization:
        $ref: "#/definitions/OrganizationResource"
      scope:
        type: "string"
      platformType:
        type: "string"
      permissions:
        type: "array"
        items:
          $ref: "#/definitions/PermissionResource"

  PermissionResource:
    type: "object"
    properties:
      uri:
        type: "string"
        format: "uri"
        xml:
          attribute: true
      id:
        type: "string"
      displayName:
        type: "string"
      description:
        type: "string"
      assignable:
        type: "boolean"
        default: false
      readOnly:
        type: "boolean"
        default: false
      category:
        $ref: "#/definitions/PermissionCategoryIdResource"
      includedPermissions:
        type: "array"
        items:
          $ref: "#/definitions/PermissionIdResource"
    xml:
      name: "versionedResource"

  PermissionIdResource:
    type: "object"
    properties:
      uri:
        type: "string"
        format: "uri"
        xml:
          attribute: true
      id:
        type: "string"
    xml:
      name: "versionedResource"

  PermissionCategoryCollectionResource:
    type: "object"
    properties:
      uri:
        type: "string"
        format: "uri"
        xml:
          attribute: true
      records:
        type: "array"
        xml:
          name: "records"
          wrapped: true
        items:
          $ref: "#/definitions/PermissionCategoryResource"
      paging:
        $ref: "#/definitions/Paging"
      navigation:
        $ref: "#/definitions/Navigation"
    xml:
      name: "collectionResource"

  PermissionCategoryResource:
    type: "object"
    properties:
      uri:
        type: "string"
        format: "uri"
        xml:
          attribute: true
      id:
        type: "string"
      displayName:
        type: "string"
      description:
        type: "string"
    xml:
      name: "versionedResource"
      
  RoleIdResource:
    type: "object"
    properties:
      uri:
        type: "string"
        format: "uri"
        xml:
          attribute: true
      id:
        type: "string"
    xml:
      name: "versionedResource"      
      
  PermissionCategoryIdResource:
    type: "object"
    properties:
      uri:
        type: "string"
        format: "uri"
        xml:
          attribute: true
      id:
        type: "string"
    xml:
      name: "versionedResource"     
      
  OrganizationResource:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"       